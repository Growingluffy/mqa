MQA(Medical Question Answer) System, by ibaguo INC? is
designed to help the medical system to build the online Chinese qa-system easily.
blabla...

Getting Started
---------------

Throughout this document, MQA_HOME is the directory containing the

checkout of the MQA code base.

Taming Text uses original java classpath and linux shell to run the code.  To get
started, you will need:

1. JDK 1.7+ 
2. Chinese Dictionary Data
	Include
		-custom dic
		-different lang support
		-person name
		-place
		-synonym
		-traditional Chinese
		-core dic
		-stop words
   	Place the data in the $USER_HOME$(such as /root/,/home/$USER,c:/user/$USER)
3.Trained MaxEnt Model
	-QMaxEnt.dat
	Place the model in the $USER_HOME$
4.Libs
	-jetty
	-solr
	-lucence
	Place the model in the $USER_HOME$/lib
   
Above can be done following the next Unix Command:
   cd ~
   mkdir lib
   mkdir solr
   mkdir $MQA_HOME
   git clone ?

To run the WebServlet,first you should init the solr server
use
   solr/bin/solr start
then check port 8983,the webservlet should be started with command
   java -Djava.ext.dirs=$USER_HOME/lib/ -classpath $MQA_HOME/mqa.jar com.ibaguo.mqa.services.WebSocketServer

the Server added 3 addServlet by far:
		 +- [/keyword]=>com.ibaguo.mqa.services.KeyWordServlet-79111260
         +- [/type]=>com.ibaguo.mqa.services.MaxEntServlet-58997c11
         +- [/solrquery]=>com.ibaguo.mqa.services.SolrSearchServlet-7248989f
         +- [/seg]=>com.ibaguo.mqa.services.SegmentServlet-4128dca6
         +- [/ask]=>com.ibaguo.mqa.services.AskServlet-20ab085
         +- [/synonym]=>com.ibaguo.mqa.services.SynonymServlet-60ebf00e
         +- [/rankword]=>com.ibaguo.mqa.services.RankWordServlet-67e7b36d
   
bind the URL and Para strickly as 
	http://$host:8080/keyword?sent=%E4%BB%8A%E5%A4%A9%E4%B8%AD%E5%8D%88%E5%90%83%E4%BA%86%E4%BB%80%E4%B9%88,%E6%8B%89%E8%82%9A%E5%AD%90%E4%BA%86&num=3
	http://$host:8080/type?kwList=%E5%8F%AF%E4%BB%A5,%E5%89%A7%E7%83%88,%E8%BF%90%E5%8A%A8
	http://$host:8080/solrquery?kw=%E5%8F%AF%E4%BB%A5,%E5%89%A7%E7%83%88,%E8%BF%90%E5%8A%A8
	http://$host:8080/seg?sent=%E8%82%8C%E8%82%89%E7%96%BC%E7%97%9B%E6%8C%81%E7%BB%AD%E6%97%B6%E9%97%B4%E4%BB%8E%E6%95%B0%E5%88%86%E9%92%9F%E8%87%B3%E6%95%B0%E5%B0%8F%E6%97%B6%EF%BC%8C%E5%81%B6%E5%8F%AF%E8%BE%BE%E6%95%B0%E5%A4%A9%E4%B9%8B%E4%B9%85
	http://$host:8080/synonym?word=%E8%82%8C%E8%82%89
	http://$host:8080/ask?sent=%E6%BA%83%E7%96%A1%E7%97%85%E7%A9%BF%E5%AD%94%E6%9C%89%E5%93%AA%E4%BA%9B%E8%A1%A8%E7%8E%B0%EF%BC%9F
	http://$host:8080/rankword?sent=%E4%B8%8A%E5%91%A8%E5%8F%AA%E6%9C%89%E4%BA%94%E9%83%A8%E8%BF%9E%E7%BB%AD%E5%89%A7%E4%B8%8A%E6%A6%9C,%E5%85%B6%E4%B8%AD%E7%A7%8B%E5%AD%A3%E6%97%A5%E5%89%A7%E5%8F%AA%E6%9C%89%E5%9B%9B%E9%83%A8,%E5%B9%B6%E4%B8%94%E6%80%BB%E4%BD%93%E6%94%B6%E8%A7%86%E6%88%90%E7%BB%A9%E4%B8%8B%E6%BB%91%E4%B8%8D%E5%B0%91

To use all these rest service by different method,you should implements:
	AnswerSearcher
		search in solr(hard code core:solr-qa) by key word list
	KeyWordExtract
		extract key word or rank each word in a document
	WordSynonym
		return a word list which are similar to the given word
	QuestionClassifier
		return a label that predict(evaluate) by a trained classification model
	QuestionToAnswer
		gather each function here and make the qa
++.Next important feature is to extend the similar Chinese words and implement to the solrquery
	
++.Test Cases

Building the Source
-------------------

As checked the code from git.
Just clean-build the project in eclipse or IntelliJ
--------------------
